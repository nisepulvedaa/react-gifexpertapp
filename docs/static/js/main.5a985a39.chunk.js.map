{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","autoComplete","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"4MAsCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OAEzCN,EAAc,KAKd,SACI,uBACAO,aAAa,MACbC,KAAK,OACLC,MAAOV,EACPW,SAnBkB,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,sCCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCYLO,EAVK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCoCDO,EArCC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SASd,ECZwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgCA,OApBAC,qBAAU,WACNxB,EAAQC,GAEPwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKvB,CAACpB,IAOIqB,EDtBuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAMnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,EAAU,mBAAGJ,UAAU,oCAAb,0BAAoE,mBAAGA,UAAU,oCAAb,2BAE/E,qBAAKA,UAAU,YAAf,SACI,6BAEMH,EAAOJ,KAAK,SAAAC,GAAG,OAEb,cAAC,EAAD,eAEKA,GADCA,EAAIC,eEGdgB,EA9BM,WAGlB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAQC,OACG,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAECA,SAAUA,GADLA,YCnBvB6B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.5a985a39.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n        }\r\n        setInputValue('');\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            autoComplete=\"off\" \r\n            type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\nexport default AddCategory;\r\n\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=b0UnoDkxyMPzLbOSxtnOLkfdiskgp3CN`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n   // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","// import React, {useState, useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     // .then(imgs => setImages(imgs))\r\n    //     .then(setImages)\r\n    // },[category]);\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n \r\n    // console.log(data);\r\n    // console.log(loading);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading ? <p className=\"animate__animated animate__fadeIn\">Cargando....</p> : <p className=\"animate__animated animate__fadeIn\">Data cargada </p>}\r\n       \r\n        <div className=\"card-grid\">\r\n            <ol>\r\n                {\r\n                  images.map( img => \r\n                   \r\n                    <GifGridItem\r\n                     key={img.id}\r\n                     {...img}\r\n                    />\r\n                 )\r\n                } \r\n            </ol>\r\n        </div> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react/cjs/react.development\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // setTimeout(() => {\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n\r\n        .then(imgs => {\r\n            \r\n      \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n \r\n\r\n        })\r\n    },[category])\r\n        // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     // .then(imgs => setImages(imgs))\r\n    //     .then(setImages)\r\n    // },[category]);\r\n\r\n    return state;\r\n\r\n}","import React,{useState} from 'react';\r\nimport AddCategory from './componentes/AddCategory';\r\nimport GifGrid from './componentes/GifGrid';\r\n\r\n\r\n const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories, 'HunterXHunter']);\r\n    //     //console.log(categories);\r\n    //     setCategories(cats => [...cats, inputValue]);\r\n    // }\r\n\r\n     return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                       <GifGrid\r\n                        key={category}\r\n                        category={category} \r\n                       />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n     );\r\n }\r\n\r\n export default GifExpertApp;\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n"],"sourceRoot":""}